<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:security="http://www.springframework.org/schema/security"
             xsi:schemaLocation="
                                    http://www.springframework.org/schema/beans
                                    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                                    http://www.springframework.org/schema/security
                                    http://www.springframework.org/schema/security/spring-security-3.2.xsd
                                    http://www.springframework.org/schema/tx 
                                    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                                    http://www.springframework.org/schema/context
                                    http://www.springframework.org/schema/context/spring-context.xsd">
        
    <http pattern="/resources/**" security="none" />
    <http auto-config="true" use-expressions="true">
        <access-denied-handler error-page="/login" />
        <intercept-url pattern="/getweather**" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/gethistory**" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/resources/**" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/logout**" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/header**" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/login**" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/weather**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN')" />
                
        <form-login 
            login-page="/login" 
            default-target-url="/weather" 
            always-use-default-target="true"
            authentication-failure-url="/login?error" 
            username-parameter="username"
            password-parameter="password"
        />
		
        <logout 
            delete-cookies="JSESSIONID"
            logout-success-url="/logout" />
    </http>

    <context:property-placeholder location="classpath:jdbc.properties"/>
    
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <beans:property name="driverClass" value="${jdbc.driverClassName}"/>
        <beans:property name="url" value="${jdbc.url}"/>
        <beans:property name="username" value="${jdbc.username}"/>
        <beans:property name="password" value="${jdbc.password}"/>
    </beans:bean>

    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="typeAliasesPackage" value="com.weather.web.domain"/>
        <beans:property name="configLocation" value="mybatis-config.xml" />
        <beans:property name="mapperLocations" value="classpath*:com/weather/web/mappers/**/*.xml" />
    </beans:bean>
    
    <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg index="0" ref="sqlSessionFactory" />
    </beans:bean>
    
    <beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="com.weather.web.mappers" />
    </beans:bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>
     
    <context:component-scan base-package="com.weather.**" />
    
    <beans:bean id="authenticationService" class="com.weather.web.security.AuthenticationService" />

    <authentication-manager>
        <authentication-provider ref="authenticationService"/>
    </authentication-manager>
	
</beans:beans>